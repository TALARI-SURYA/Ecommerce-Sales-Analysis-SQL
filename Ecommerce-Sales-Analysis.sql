/* Project: E-Commerce Sales Analysis using SQL */


-- CREATE A DATABASE--
CREATE DATABASE Ecommerce_db;
-- USE DATABASE ECOMMERCE_DB--
USE Ecommerce_db;

-- CREATE TABLE 3 TABLES FOR 1.CUSTOMER 2.PRODUCTS 3.ORDERS --

-- CREATE CUSTOMERS TABLE --
CREATE TABLE CUSTOMERS(
					CUSTOMER_ID INT PRIMARY KEY,
                    CUSTOMER_NAME VARCHAR(50),
                    EMAIL VARCHAR(50), 
                    CITY VARCHAR(30)
	);

-- CREATE PRODUCTS TABLE
CREATE TABLE PRODUCTS(
					PRODUCT_ID INT PRIMARY KEY,
                    PRODUCT_NAME VARCHAR(50),
                    CATEGORY VARCHAR(30),
                    PRICE DECIMAL(10,2)
	);
-- CREATE ORDER TABLE --
CREATE TABLE ORDERS(
			        ORDER_ID INT PRIMARY KEY,
                    CUSTOMER_ID INT ,
                    PRODUCT_ID INT,
                    QUANTITY INT, 
                    ORDER_DATE DATE,
                    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
                    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
	);
    
-- INSERT THE VALUES INTO TABLES --

-- 1. INSERT THE CUSTOMER VALUES INTO CUSTOMER TABLE --

INSERT INTO CUSTOMERS VALUES(1, 'Ravi Kumar', 'ravi@gmail.com', 'Hyderabad'),
							(2, 'Priya Sharma', 'priya@gmail.com', 'Bangalore'),
							(3, 'Arjun Reddy', 'arjun@gmail.com', 'Chennai'),
							(4, 'Kavya Nair', 'kavya@gmail.com', 'Mumbai');
                            
-- INSERT VALUS INTO PRODCT TABLE --

INSERT INTO products VALUES
(101, 'Laptop', 'Electronics', 55000),
(102, 'Smartphone', 'Electronics', 25000),
(103, 'Shoes', 'Fashion', 3000),
(104, 'Watch', 'Fashion', 4000),
(105, 'Headphones', 'Electronics', 2000);

-- INSERT VALUES INTO ORDERS TABLE --

INSERT INTO orders VALUES
(1001, 1, 101, 1, '2024-12-10'),
(1002, 2, 102, 2, '2024-12-12'),
(1003, 3, 103, 1, '2025-01-05'),
(1004, 1, 105, 3, '2025-02-15'),
(1005, 2, 104, 1, '2025-02-20'),
(1006, 4, 101, 1, '2025-03-10');

-- VIEW CUSTOMER TABLE -- 
SELECT * FROM CUSTOMERS; 

-- VIEW PRODUCT TABLE --
SELECT * FROM PRODUCTS;

-- VIEW ORDERS TABLE --
SELECT * FROM ORDERS;

-- FIND TOTAL SALES AMOUNT PER ORDER --

SELECT O.ORDER_ID,
		P.PRODUCT_ID,
        C.CUSTOMER_ID,
		C.CUSTOMER_NAME,
        P.PRODUCT_NAME,
        (P.PRICE*O.QUANTITY) AS TOTAL_AMOUNT
FROM ORDERS AS O
JOIN CUSTOMERS AS C ON O.CUSTOMER_ID=C.CUSTOMER_ID
JOIN PRODUCTS AS P ON O.PRODUCT_ID = P.PRODUCT_ID;

-- TOP CUSTOMERS BY SPENDING --

SELECT C.CUSTOMER_NAME,
		SUM(P.PRICE* O.QUANTITY) AS TOTAL_SPENT
FROM ORDERS AS O
JOIN CUSTOMERS AS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN PRODUCTS AS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY C.CUSTOMER_NAME
ORDER BY TOTAL_SPENT DESC;

-- TOTAL REVENUE PER CATEGORY --
SELECT P.CATEGORY,
		SUM(P.PRICE*O.QUANTITY) AS TOTAL_REVENUE
FROM ORDERS AS O
JOIN PRODUCTS AS P ON O.PRODUCT_ID= P.PRODUCT_ID
GROUP BY P.CATEGORY;

-- MONTHLY SALES TREND --

SELECT DATE_FORMAT(ORDER_DATE,'%Y-%M') AS MONTH,
		SUM(P.PRICE *O.quantity) AS TOTAL_SALES
FROM ORDERS AS O
JOIN PRODUCTS AS P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY month
ORDER BY MONTH;

-- MOST POPULAR PRODUCT--
SELECT P.PRODUCT_NAME,
	SUM(O.QUANTITY) AS POPULAR_PRODUCT
FROM ORDERS AS O
JOIN PRODUCTS AS P ON O.PRODUCT_ID =P.PRODUCT_ID
GROUP BY P.PRODUCT_NAME
ORDER BY POPULAR_PRODUCT DESC
LIMIT 1;
